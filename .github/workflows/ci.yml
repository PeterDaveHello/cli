name: ci
on: push

jobs:
  lint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v2
        with:
          go-version: "1.17"
      - name: Verify dependencies
        run: |
          go mod verify
          go mod download

          LINT_VERSION=1.44.2
          curl -fsSL https://github.com/golangci/golangci-lint/releases/download/v${LINT_VERSION}/golangci-lint-${LINT_VERSION}-linux-amd64.tar.gz | \
            tar xz --strip-components 1 --wildcards \*/golangci-lint
          mkdir -p bin && mv golangci-lint bin/
      - name: Run checks
        run: |
          STATUS=0
          assert-nothing-changed() {
            local diff
            "$@" >/dev/null || return 1
            if ! diff="$(git diff -U1 --color --exit-code)"; then
              printf '\e[31mError: running `\e[1m%s\e[22m` results in modifications that you must check into version control:\e[0m\n%s\n\n' "$*" "$diff" >&2
              git checkout -- .
              STATUS=1
            fi
          }

          assert-nothing-changed go fmt ./...
          assert-nothing-changed go mod tidy

          bin/golangci-lint run --out-format=github-actions --timeout=3m || STATUS=$?

          exit $STATUS

  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v2
        with:
          go-version: "1.17"
      - uses: actions/cache@v2
        with:
          path: ~/go
          key: ${{ runner.os }}-build-${{ hashFiles('go.mod') }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: go mod download
      - run: go test -race ./...
      - run: go build -v ./cmd/depot
